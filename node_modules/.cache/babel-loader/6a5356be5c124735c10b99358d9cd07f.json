{"ast":null,"code":"var _jsxFileName = \"/home/pixlerlab/Desktop/Test/crypto-api/crypto-data/src/component/Apidata.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, Container } from \"react-bootstrap\";\nimport \"./css/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Apidata() {\n  _s();\n\n  const [value, setValue] = useState([]);\n  const [search, setSearch] = useState(\"mumbai\");\n  useEffect(() => {\n    handleData();\n  }, [search]);\n\n  const handleData = async () => {\n    try {\n      await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=effecea7baccf16912338e128c2f0bf8`).then(result => {\n        console.log(result.data);\n        setValue(result.data);\n      });\n    } catch (error) {\n      console.log(\"api error\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: e => {\n            setSearch(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), !value ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"no data found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Apidata, \"GbJuUAiWxWSFkemLNfmQ/ofE4no=\");\n\n_c = Apidata;\nexport default Apidata;\n\nvar _c;\n\n$RefreshReg$(_c, \"Apidata\");","map":{"version":3,"sources":["/home/pixlerlab/Desktop/Test/crypto-api/crypto-data/src/component/Apidata.js"],"names":["React","useState","useEffect","axios","Card","Container","Apidata","value","setValue","search","setSearch","handleData","get","then","result","console","log","data","error","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,iBAAhC;AACA,OAAO,iBAAP;;;;AACA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,QAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;;AAIA,QAAME,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMR,KAAK,CACRS,GADG,CAED,qDAAoDH,MAAO,sDAF1D,EAIHI,IAJG,CAIGC,MAAD,IAAY;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAT,QAAAA,QAAQ,CAACM,MAAM,CAACG,IAAR,CAAR;AACD,OAPG,CAAN;AAQD,KATD,CASE,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,KAAzB;AACD;AACF,GAbD;;AAcA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACfT,YAAAA,SAAS,CAACS,CAAC,CAACC,MAAF,CAASb,KAAV,CAAT;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,gBADF,EAQG,CAACA,KAAD,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAA,kCACE;AAAA,sBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAyBD;;GA/CQH,O;;KAAAA,O;AAiDT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, Container } from \"react-bootstrap\";\nimport \"./css/style.css\";\nfunction Apidata() {\n  const [value, setValue] = useState([]);\n  const [search, setSearch] = useState(\"mumbai\");\n\n  useEffect(() => {\n    handleData();\n  }, [search]);\n\n  const handleData = async () => {\n    try {\n      await axios\n        .get(\n          `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=effecea7baccf16912338e128c2f0bf8`\n        )\n        .then((result) => {\n          console.log(result.data);\n          setValue(result.data);\n        });\n    } catch (error) {\n      console.log(\"api error\", error);\n    }\n  };\n  return (\n    <>\n      <h1>Weather Data</h1>\n      <div class=\"card\">\n        <div class=\"container\">\n          <input\n            type=\"search\"\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n          />\n\n          {!value ? (\n            <p>no data found</p>\n          ) : (\n            <div>\n              <h2>{search}</h2>\n              {/* <h1>{value.main.temp}</h1> */}\n              <h3>{/* min {value.main.temp_min} | max {value.main.temp_max} */}</h3>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Apidata;\n"]},"metadata":{},"sourceType":"module"}